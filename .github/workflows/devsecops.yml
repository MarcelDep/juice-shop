name: DevSecOps Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  devsecops:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.16-dind
        options: --privileged
        ports:
          - 3000:3000

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    # SCA - npm audit
    - name: Install dependencies
      run: npm install
    
    - name: Run npm audit
      run: npm audit --json > audit-report.json || true
    
    - name: Check High/Critical vulns in npm audit
      run: |
        apt-get update && apt-get install -y jq
        cat audit-report.json
        vulnerabilities=$(jq '[.vulnerabilities[]? | select(.severity=="high" or .severity=="critical")] | length' audit-report.json)
        echo "High/Critical vulnerabilities found: $vulnerabilities"
        if [ "$vulnerabilities" -ge 2 ]; then
          echo "Found 2 or more high/critical vulnerabilities - continuing build"
        fi
    
    - name: Upload audit report
      uses: actions/upload-artifact@v4
      with:
        name: npm-audit-report
        path: audit-report.json

    # SAST - Semgrep
    - name: Run Semgrep scan
      uses: returntocorp/semgrep-action@v1
      with:
        config: "p/owasp-nodejs"

    # Secrets scan - Gitleaks
    - name: Install Gitleaks
      run: |
        apt-get update && apt-get install -y curl unzip
        curl -sSfL https://raw.githubusercontent.com/gitleaks/gitleaks/master/install.sh | sh -s -- -b /usr/local/bin v8.17.0

    - name: Run Gitleaks scan
      run: gitleaks detect --verbose --report-format json --report-path gitleaks-report.json || true

    - name: Upload Gitleaks report
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-report
        path: gitleaks-report.json

    # Docker build
    - name: Build Docker image
      run: docker build -t juice-shop:latest .

    # Trivy scan
    - name: Install Trivy
      run: |
        apt-get update && apt-get install -y curl
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

    - name: Scan Docker image with Trivy
      run: |
        trivy image --severity HIGH,CRITICAL --format table --output trivy-report.txt juice-shop:latest || true

    - name: Upload Trivy report
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-report.txt

    # DAST - ZAP
    - name: Run Juice Shop container
      run: |
        docker run -d -p 3001:3000 --name juice-shop-test juice-shop:latest
        sleep 25

    - name: Run OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.7.0
      with:
        target: "http://localhost:3001"
        fail_action: false
